{"version":3,"sources":["../src/browser/app/main/main.component.ts"],"names":[],"mappings":"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","file":"main.component.js","sourcesContent":["import {Component, Optional, ViewEncapsulation, Inject, OnInit, NgZone, SimpleChanges, ViewChild} from '@angular/core';\nimport {TabService} from './tab/tab.service';\nimport {Tab} from './tab/tab';\nimport {ShortCuts} from './../shortcuts/shortcuts';\nimport {IpcRendererService} from './../../shared/electron/ipcrenderer.service';\nimport {ApplicationService} from \"../../shared/electron/application.service\";\nimport {SettingsService} from \"../../shared/settings/settings.service\";\nimport {Title} from \"@angular/platform-browser\";\n\n//const { ipcRenderer } = (<any>global).nodeRequire('electron');\n\n@Component({\n    selector: 'main',\n    templateUrl: 'app/main/main.component.html',\n    styleUrls: ['app/main/main.component.css'],\n    host: {\n        \"style\": \"height:100%; overflow: hidden; background: black;\" // find something less ugly in future\n    }\n})\nexport class MainComponent implements OnInit {\n    tabs: Tab[];\n    activTab: Tab = null;\n    private shortCuts: ShortCuts;\n\n    constructor(@Inject('Window') private window: Window,\n                private tabService: TabService,\n                private ipcRendererService: IpcRendererService,\n                private settingsService: SettingsService,\n                private applicationService: ApplicationService,\n                private titleService: Title) {\n        (<any>this.window).appVersion = this.applicationService.appVersion;\n        (<any>this.window).buildVersion = this.applicationService.buildVersion;\n\n        this.shortCuts = new ShortCuts(this.window);\n\n        this.titleService.setTitle('DofusTouch No-Emu');\n    }\n\n\n    addTab(): void {\n        let tab: Tab = new Tab();\n        this.tabService.addTab(tab);\n\n        this.selectTab(tab);\n    }\n\n    removeTab(tab: Tab): void {\n\n        if (this.activTab !== null && tab.id === this.activTab.id) {\n            console.log('activTab was deleted');\n            this.activTab = null;\n            //let newTab = this.tabService.getNearTab(tab);\n            //this.selectTab(newTab.id)\n        }\n\n        this.tabService.removeTab(tab);\n    }\n\n    setEventListener(): void {\n\n        // ipc new tab\n        this.ipcRendererService.on('new-tab', (event: Event) => {\n            this.addTab();\n        });\n\n        // ipc close tab\n        this.ipcRendererService.on('close-tab', (event: Event) => {\n            this.removeTab(this.activTab);\n        });\n\n        // ipc switch tab\n        this.ipcRendererService.on('switch-tab', (event: Event, action: string | number) => {\n\n            if ((<any>Number).isInteger(action)) {\n                if (typeof this.tabs[action] !== 'undefined') {\n                    this.selectTab(this.tabs[action]);\n                }\n            } else {\n                let index = this.tabs.indexOf(this.activTab);\n                switch (action) {\n                    case 'prev':\n                        if (index !== -1) {\n                            if (index === 0) {\n                                this.selectTab(this.tabs[this.tabs.length - 1]);\n                            } else {\n                                this.selectTab(this.tabs[index - 1]);\n                            }\n                        }\n                        break;\n                    case 'next':\n                        if (index !== -1) {\n                            if (index === (this.tabs.length - 1)) {\n                                this.selectTab(this.tabs[0]);\n                            } else {\n                                this.selectTab(this.tabs[index + 1]);\n                            }\n                        }\n                        break;\n                }\n            }\n        });\n    }\n\n    selectTab(tab: Tab): void {\n\n        // remove old activTab\n        if (this.activTab !== null) {\n            this.activTab.isFocus = false;\n        }\n\n        // set the new one\n        this.activTab = tab;\n\n        // add focus and remove noitification\n        this.activTab.isFocus = true;\n        this.activTab.notification = false;\n\n        //focus the iframe\n        if (this.activTab.isLogged) {\n            this.activTab.window.focus();\n        }\n\n        // change the name of the windows\n        if (this.activTab.isLogged) {\n            this.titleService.setTitle(this.activTab.character);\n        }\n\n    }\n\n\n    ngOnInit(): void {\n        this.tabs = this.tabService.getTabs();\n\n        this.setEventListener();\n\n\n        this.addTab();\n\n    }\n}\n"]}