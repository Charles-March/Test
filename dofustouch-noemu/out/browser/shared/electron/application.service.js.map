{"version":3,"sources":["../src/browser/shared/electron/application.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,wCAA2C;AAC3C,+DAAyD;AAGzD,IAAa,kBAAkB,GAA/B;IAOI,YACY,kBAAsC;QAAtC,uBAAkB,GAAlB,kBAAkB,CAAoB;QAN3C,aAAQ,GAAW,EAAE,CAAC;IAQ7B,CAAC;IAEM,IAAI;QACP,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;QAExC,IAAI,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC7D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAChC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;QACpC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAClC,CAAC;CAEJ,CAAA;AAtBY,kBAAkB;IAD9B,iBAAU,EAAE;qCASuB,wCAAkB;GARzC,kBAAkB,CAsB9B;AAtBY,gDAAkB","file":"application.service.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {IpcRendererService} from \"./ipcrenderer.service\";\n\n@Injectable()\nexport class ApplicationService {\n\n    public gamePath: string = \"\";\n    public buildVersion: string;\n    public appVersion: string;\n    public appPath: string;\n\n    constructor(\n        private ipcRendererService: IpcRendererService\n    ){\n    }\n\n    public load(): void {\n        console.log('init application service');\n\n        let config = this.ipcRendererService.sendSync('load-config');\n        this.gamePath = config.gamePath;\n        this.buildVersion = config.buildVersion;\n        this.appVersion = config.appVersion;\n        this.appPath = config.appPath;\n    }\n\n}"]}