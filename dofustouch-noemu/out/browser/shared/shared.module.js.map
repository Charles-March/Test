{"version":3,"sources":["../src/browser/shared/shared.module.ts"],"names":[],"mappings":";;;;;;;AAAA,wCAA6E;AAC7E,kEAA8D;AAC9D,wEAAoE;AACpE,wEAAkE;AAIlE,IAAa,YAAY,oBAAzB;IACI,MAAM,CAAC,OAAO;QACV,MAAM,CAAC;YACH,QAAQ,EAAE,cAAY;YACtB,SAAS,EAAE;gBACP,kCAAe;gBACf,wCAAkB;gBAClB,wCAAkB;gBAClB;oBACI,OAAO,EAAE,sBAAe;oBACxB,UAAU,EAAE,CAAC,MAA0B,KAAK,MAAM,MAAM,CAAC,IAAI,EAAE;oBAC/D,IAAI,EAAE,CAAC,wCAAkB,CAAC;oBAC1B,KAAK,EAAE,IAAI;iBACd;aACJ;SACJ,CAAC;IACN,CAAC;CACJ,CAAA;AAjBY,YAAY;IADxB,eAAQ,CAAC,EAAE,CAAC;GACA,YAAY,CAiBxB;AAjBY,oCAAY","file":"shared.module.js","sourcesContent":["import {NgModule, APP_INITIALIZER, ModuleWithProviders} from '@angular/core';\nimport { SettingsService } from './settings/settings.service';\nimport { IpcRendererService } from './electron/ipcrenderer.service';\nimport {ApplicationService} from \"./electron/application.service\";\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({})\nexport class SharedModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: SharedModule,\n            providers: [\n                SettingsService,\n                IpcRendererService,\n                ApplicationService,\n                {\n                    provide: APP_INITIALIZER,\n                    useFactory: (config: ApplicationService) => () => config.load(),\n                    deps: [ApplicationService],\n                    multi: true\n                },\n            ]\n        };\n    }\n}\n"]}