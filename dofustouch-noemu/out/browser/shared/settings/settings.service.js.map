{"version":3,"sources":["../src/browser/shared/settings/settings.service.ts"],"names":[],"mappings":"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","file":"settings.service.js","sourcesContent":["import {Injectable, NgZone} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\nimport {ISettings, IGeneral} from './../../../shared/settings'\nimport {IpcRendererService} from \"../electron/ipcrenderer.service\";\n\nconst settings = (<any>global).nodeRequire('electron-settings');\n\nexport class Option {\n    private _buildVersion: string;\n    private _appVersion: string;\n    public general: Option.General;\n    public shortcuts: Option.Shortcuts;\n    public notification: Option.Notification;\n\n    get buildVersion(): string {\n        return this._buildVersion;\n    }\n\n    set buildVersion(buildVersion: string) {\n        settings.setSync('option.buildVersion', buildVersion);\n        this._buildVersion = buildVersion;\n    }\n\n    get appVersion(): string {\n        return this._appVersion;\n    }\n\n    set appVersion(appVersion: string) {\n        settings.setSync('option.appVersion', appVersion);\n        this._appVersion = appVersion;\n    }\n\n    constructor() {\n        this.general = new Option.General();\n        this.shortcuts = new Option.Shortcuts();\n        this.notification = new Option.Notification();\n\n        this._appVersion = settings.getSync('option.appVersion');\n        this._buildVersion = settings.getSync('option.buildVersion');\n    }\n}\n\nexport module Option {\n\n    export class Shortcuts {\n        public no_emu: Shortcuts.NoEmu;\n        public diver: Shortcuts.Diver;\n        public interface: Shortcuts.Interface;\n        private _spell: Array<string>;\n        private _item: Array<string>;\n\n        constructor() {\n            this.no_emu = new Shortcuts.NoEmu();\n            this.diver = new Shortcuts.Diver();\n            this.interface = new Shortcuts.Interface();\n            this._spell = settings.getSync('option.shortcuts.spell');\n            this._item = settings.getSync('option.shortcuts.item');\n        }\n\n\n        get spell(): Array<string> {\n            return new Proxy(this._spell, {\n                get: function (target: any, name: any) {\n                    return target[name];\n                },\n                set(target: any, prop: string, value: any) {\n                    target[prop] = value;\n                    settings.setSync('option.shortcuts.spell', target);\n                    return true;\n                }\n            });\n        }\n\n        set spell(spell: Array<string>) {\n            settings.setSync('option.shortcuts.spell', spell);\n            this._spell = spell;\n        }\n\n        get item(): Array<string> {\n            return new Proxy(this._item, {\n                get: function (target, name) {\n                    return target[name];\n                },\n                set(target, prop: string, value) {\n                    target[prop] = value;\n                    settings.setSync('option.shortcuts.item', target);\n                    return true;\n                }\n            });\n        }\n\n        set item(item: Array<string>) {\n            settings.setSync('option.shortcuts.item', item);\n            this._item = item;\n        }\n    }\n\n    export module Shortcuts {\n\n        export class Interface {\n            private _carac: string;\n            private _spell: string;\n            private _bag: string;\n            private _bidhouse: string;\n            private _map: string;\n            private _friend: string;\n            private _book: string;\n            private _guild: string;\n            private _conquest: string;\n            private _job: string;\n            private _alliance: string;\n            private _mount: string;\n            private _directory: string;\n            private _alignement: string;\n            private _bestiary: string;\n            private _title: string;\n            private _achievement: string;\n            private _almanax: string;\n            private _spouse: string;\n            private _shop: string;\n            private _goultine: string;\n\n            get carac(): string {\n                return this._carac;\n            }\n\n            set carac(carac: string) {\n                settings.setSync('option.shortcuts.interface.carac', carac);\n                this._carac = carac;\n            }\n\n            get spell(): string {\n                return this._spell;\n            }\n\n            set spell(spell: string) {\n                settings.setSync('option.shortcuts.interface.spell', spell);\n                this._spell = spell;\n            }\n\n            get bag(): string {\n                return this._bag;\n            }\n\n            set bag(bag: string) {\n                settings.setSync('option.shortcuts.interface.bag', bag);\n                this._bag = bag;\n            }\n\n            get bidhouse(): string {\n                return this._bidhouse;\n            }\n\n            set bidhouse(bidhouse: string) {\n                settings.setSync('option.shortcuts.interface.bidhouse', bidhouse);\n                this._bidhouse = bidhouse;\n            }\n\n            get map(): string {\n                return this._map;\n            }\n\n            set map(map: string) {\n                settings.setSync('option.shortcuts.interface.map', map);\n                this._map = map;\n            }\n\n            get friend(): string {\n                return this._friend;\n            }\n\n            set friend(friend: string) {\n                settings.setSync('option.shortcuts.interface.friend', friend);\n                this._friend = friend;\n            }\n\n            get book(): string {\n                return this._book;\n            }\n\n            set book(book: string) {\n                settings.setSync('option.shortcuts.interface.book', book);\n                this._book = book;\n            }\n\n            get guild(): string {\n                return this._guild;\n            }\n\n            set guild(guild: string) {\n                settings.setSync('option.shortcuts.interface.guild', guild);\n                this._guild = guild;\n            }\n\n            get conquest(): string {\n                return this._conquest;\n            }\n\n            set conquest(conquest: string) {\n                settings.setSync('option.shortcuts.interface.guild', conquest);\n                this._conquest = conquest;\n            }\n\n            get job(): string {\n                return this._job;\n            }\n\n            set job(job: string) {\n                settings.setSync('option.shortcuts.interface.job', job);\n                this._job = job;\n            }\n\n            get alliance(): string {\n                return this._alliance;\n            }\n\n            set alliance(alliance: string) {\n                settings.setSync('option.shortcuts.interface.alliance', alliance);\n                this._alliance = alliance;\n            }\n\n            get mount(): string {\n                return this._mount;\n            }\n\n            set mount(mount: string) {\n                settings.setSync('option.shortcuts.interface.guild', mount);\n                this._mount = mount;\n            }\n\n            get directory(): string {\n                return this._directory;\n            }\n\n            set directory(directory: string) {\n                settings.setSync('option.shortcuts.interface.directory', directory);\n                this._directory = directory;\n            }\n\n            get alignement(): string {\n                return this._alignement;\n            }\n\n            set alignement(alignement: string) {\n                settings.setSync('option.shortcuts.interface.alignement', alignement);\n                this._alignement = alignement;\n            }\n\n            get bestiary(): string {\n                return this._bestiary;\n            }\n\n            set bestiary(bestiary: string) {\n                settings.setSync('option.shortcuts.interface.bestiary', bestiary);\n                this._bestiary = bestiary;\n            }\n\n            get title(): string {\n                return this._title;\n            }\n\n            set title(title: string) {\n                settings.setSync('option.shortcuts.interface.title', title);\n                this._title = title;\n            }\n\n            get achievement(): string {\n                return this._achievement;\n            }\n\n            set achievement(achievement: string) {\n                settings.setSync('option.shortcuts.interface.achievement', achievement);\n                this._achievement = achievement;\n            }\n\n            get almanax(): string {\n                return this._almanax;\n            }\n\n            set almanax(almanax: string) {\n                settings.setSync('option.shortcuts.interface.almanax', almanax);\n                this._almanax = almanax;\n            }\n\n            get spouse(): string {\n                return this._spouse;\n            }\n\n            set spouse(spouse: string) {\n                settings.setSync('option.shortcuts.interface.spouse', spouse);\n                this._spouse = spouse;\n            }\n\n            get shop(): string {\n                return this._shop;\n            }\n\n            set shop(shop: string) {\n                settings.setSync('option.shortcuts.interface.shop', shop);\n                this._shop = shop;\n            }\n\n            get goultine(): string {\n                return this._goultine;\n            }\n\n            set goultine(goultine: string) {\n                settings.setSync('option.shortcuts.interface.goultine', goultine);\n                this._goultine = goultine;\n            }\n\n            public getAll(): Array<any> {\n                let tab: Array<any> = [];\n\n                for (let prop in this) {\n                    let newProp = prop.replace('_', '');\n                    tab.push({\n                        key: newProp,\n                        value: this[prop]\n                    });\n                }\n\n                return tab;\n            }\n\n            constructor() {\n                this._carac = settings.getSync('option.shortcuts.interface.carac');\n                this._spell = settings.getSync('option.shortcuts.interface.spell');\n                this._bag = settings.getSync('option.shortcuts.interface.bag');\n                this._bidhouse = settings.getSync('option.shortcuts.interface.bidhouse');\n                this._map = settings.getSync('option.shortcuts.interface.map');\n                this._friend = settings.getSync('option.shortcuts.interface.friend');\n                this._book = settings.getSync('option.shortcuts.interface.book');\n                this._guild = settings.getSync('option.shortcuts.interface.guild');\n                this._conquest = settings.getSync('option.shortcuts.interface.conquest');\n                this._job = settings.getSync('option.shortcuts.interface.job');\n                this._alliance = settings.getSync('option.shortcuts.interface.alliance');\n                this._mount = settings.getSync('option.shortcuts.interface.mount');\n                this._directory = settings.getSync('option.shortcuts.interface.directory');\n                this._alignement = settings.getSync('option.shortcuts.interface.alignement');\n                this._bestiary = settings.getSync('option.shortcuts.interface.bestiary');\n                this._title = settings.getSync('option.shortcuts.interface.title');\n                this._achievement = settings.getSync('option.shortcuts.interface.achievement');\n                this._almanax = settings.getSync('option.shortcuts.interface.almanax');\n                this._spouse = settings.getSync('option.shortcuts.interface.spouse');\n                this._shop = settings.getSync('option.shortcuts.interface.shop');\n                this._goultine = settings.getSync('option.shortcuts.interface.goultine');\n            }\n        }\n\n        export class NoEmu {\n            private _new_tab: string;\n            private _new_window: string;\n            private _next_tab: string;\n            private _prev_tab: string;\n            private _activ_tab: string;\n            private _tabs: Array<string>;\n\n            get new_tab(): string {\n                return this._new_tab;\n            }\n\n            set new_tab(new_tab: string) {\n                settings.setSync('option.shortcuts.no_emu.new_tab', new_tab);\n                this._new_tab = new_tab;\n            }\n\n            get new_window(): string {\n                return this._new_window;\n            }\n\n            set new_window(new_window: string) {\n                settings.setSync('option.shortcuts.no_emu.new_window', new_window);\n                this._new_window = new_window;\n            }\n\n            get next_tab(): string {\n                return this._next_tab;\n            }\n\n            set next_tab(next_tab: string) {\n                settings.setSync('option.shortcuts.no_emu.next_tab', next_tab);\n                this._next_tab = next_tab;\n            }\n\n            get prev_tab(): string {\n                return this._prev_tab;\n            }\n\n            set prev_tab(prev_tab: string) {\n                settings.setSync('option.shortcuts.no_emu.prev_tab', prev_tab);\n                this._prev_tab = prev_tab;\n            }\n\n            get activ_tab(): string {\n                return this._activ_tab;\n            }\n\n            set activ_tab(activ_tab: string) {\n                settings.setSync('option.shortcuts.no_emu.activ_tab', activ_tab);\n                this._activ_tab = activ_tab;\n            }\n\n            get tabs(): Array<string> {\n                return new Proxy(this._tabs, {\n                    get: function (target:any, name:any) {\n                        return target[name];\n                    },\n                    set(target:any, prop: string, value:any) {\n                        target[prop] = value;\n                        settings.setSync('option.shortcuts.no_emu.tabs', target);\n                        return true;\n                    }\n                });\n            }\n\n            set tabs(tabs: Array<string>) {\n                console.log(tabs);\n                settings.setSync('option.shortcuts.no_emu.tabs', tabs);\n                this._tabs = tabs;\n            }\n\n            constructor() {\n                this.new_tab = settings.getSync('option.shortcuts.no_emu.new_tab');\n                this.new_window = settings.getSync('option.shortcuts.no_emu.new_window');\n                this.next_tab = settings.getSync('option.shortcuts.no_emu.next_tab');\n                this.prev_tab = settings.getSync('option.shortcuts.no_emu.prev_tab');\n                this.activ_tab = settings.getSync('option.shortcuts.no_emu.activ_tab');\n                this.tabs = settings.getSync('option.shortcuts.no_emu.tabs');\n            }\n        }\n\n        export class Diver {\n            private _end_turn: string;\n\n            get end_turn(): string {\n                return this._end_turn;\n            }\n\n            set end_turn(end_turn: string) {\n                settings.setSync('option.shortcuts.diver.end_turn', end_turn);\n                this._end_turn = end_turn;\n            }\n\n            constructor() {\n                this.end_turn = settings.getSync('option.shortcuts.diver.end_turn');\n            }\n        }\n    }\n\n    export class General {\n\n        private _hidden_shop: boolean;\n        private _developper_mode: boolean;\n        private _resolution: {\n            x: boolean;\n            y: boolean;\n        }\n\n        get hidden_shop(): boolean {\n            return this._hidden_shop;\n        }\n\n        set hidden_shop(hidden_shop: boolean) {\n            settings.setSync('option.general.hidden_shop', hidden_shop);\n            this._hidden_shop = hidden_shop;\n        }\n\n        get developper_mode() {\n            return this._developper_mode;\n        }\n\n        set developper_mode(developper_mode: boolean) {\n            settings.setSync('option.general.developper_mode', developper_mode);\n            this._developper_mode = developper_mode;\n        }\n\n        get resolution() {\n            return this._resolution;\n        }\n\n        set resolution(resolution: any) {\n            settings.setSync('option.general.resolution', resolution);\n            this._resolution = resolution;\n        }\n\n        constructor() {\n            this.hidden_shop = settings.getSync('option.general.hidden_shop');\n            this.developper_mode = settings.getSync('option.general.developper_mode');\n            this.resolution = settings.getSync('option.general.resolution');\n        }\n    }\n\n    export class Notification {\n        private _private_message: boolean;\n        private _fight_turn: boolean;\n\n        get private_message() {\n            return this._private_message;\n        }\n\n        set private_message(private_message: any) {\n            settings.setSync('option.notification.private_message', private_message);\n            this._private_message = private_message;\n        }\n\n        get fight_turn() {\n            return this._fight_turn;\n        }\n\n        set fight_turn(fight_turn: any) {\n            settings.setSync('option.notification.fight_turn', fight_turn);\n            this._fight_turn = fight_turn;\n        }\n\n        constructor() {\n            this.fight_turn = settings.getSync('option.notification.fight_turn');\n            this.private_message = settings.getSync('option.notification.private_message');\n        }\n    }\n}\n\n\n@Injectable()\nexport class SettingsService {\n\n    public option: Option;\n\n    constructor(private ipcRendererService: IpcRendererService,\n                private zone: NgZone) {\n        this.option = new Option();\n\n\n        this.ipcRendererService.on('reload-settings', () => {\n            console.log('receive->reload-settings');\n\n            //this.option = nullx;\n            let resetOption = new Option(); // synchronous call\n\n\n            this.option.shortcuts.no_emu = resetOption.shortcuts.no_emu;\n\n            this.option.appVersion = resetOption.appVersion;\n            this.option.buildVersion = resetOption.buildVersion;\n            this.option.general = resetOption.general;\n\n            this.option.notification = resetOption.notification;\n            this.option.shortcuts.diver = resetOption.shortcuts.diver;\n            this.option.shortcuts.interface = resetOption.shortcuts.interface;\n            this.option.shortcuts.spell = resetOption.shortcuts.spell;\n            this.option.shortcuts.item = resetOption.shortcuts.item;\n\n            console.log('emit->reload-settings-done');\n\n            this.ipcRendererService.send('reload-settings-done');\n\n\n        });\n\n    }\n\n}\n"]}