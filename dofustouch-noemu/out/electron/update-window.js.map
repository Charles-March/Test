{"version":3,"sources":["../src/electron/update-window.ts"],"names":[],"mappings":"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","file":"update-window.js","sourcesContent":["import request = require(\"request\");\nconst pkg = require('./../../package.json');\nconst settings = require('electron-settings');\nconst extract = require('extract-zip');\n\nimport electron = require(\"electron\");\nimport {ipcMain, app, Menu, BrowserWindow, dialog, shell} from 'electron';\nimport * as url from 'url';\nimport * as fs from 'fs';\n\nimport {Application} from './application';\nimport {spawn} from \"child_process\";\n\ndeclare interface UpdateResponse {\n    noemu: {\n        version: string;\n        required: boolean;\n        web: boolean;\n    };\n    dofustouch: {\n        version: string;\n        file: string;\n    }\n}\n\nexport class UpdateWindow {\n\n    public win: Electron.BrowserWindow;\n    private application: Application;\n\n    constructor(application: Application) {\n        this.application = application;\n    }\n\n    private createWindow(): Electron.BrowserWindow {\n        let window = new electron.BrowserWindow({\n            width: 800,\n            height: 150,\n            resizable: false,\n            center: true,\n            parent: electron.BrowserWindow.getFocusedWindow(),\n            darkTheme: true,\n            skipTaskbar: true,\n            show: true,\n            modal: true\n        });\n\n        window.on('closed', () => {\n            window = null;\n        });\n\n        return window;\n    }\n\n    private openUpdateModal(response: UpdateResponse): Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            let message = 'Une nouvelle version de DOFUS Touch No-Emu est disponible, vous pouvez la télécharger depuis notre site!\\n';\n            let buttons: Array<string> = ['Se rendre sur le site'];\n\n            if (!response.noemu.required) {\n                buttons.push('Ignorer');\n            } else {\n                message = 'Une nouvelle version obligatoire de DOFUS Touch No-Emu est disponible, vous pouvez la télécharger sur notre site.'\n            }\n\n\n            dialog.showMessageBox(BrowserWindow.getFocusedWindow(), {\n                type: 'info',\n                title: 'Nouvelle version : ' + response.noemu.version,\n                message: message,\n                buttons: buttons,\n            }, (buttonIndex: number) => {\n                if (buttonIndex == 0) {\n                    shell.openExternal(\"http://dofustouch.no-emu.com/#download\")\n                    app.exit();\n                } else {\n                    resolve();\n                }\n            });\n        });\n    }\n\n    public checkNoEmuUpdate(response: UpdateResponse): Promise<UpdateResponse> {\n        return new Promise((resolve, reject) => {\n            console.log(pkg.version);\n            if (pkg.version == response.noemu.version) {\n                console.log('No-Emu is already up to date');\n                resolve(response);\n            } else {\n                switch (process.platform) {\n                    case 'darwin':\n                    case 'linux':\n                    case 'win32':\n                        this.openUpdateModal(response).then(() => {\n                            resolve(response);\n                        });\n                        break;\n                    /*case 'win32':\n                     if (!fs.existsSync('updater.exe')) {\n                     dialog.showMessageBox(BrowserWindow.getFocusedWindow(), {\n                     type: 'info',\n                     title: 'Erreur updater.exe manquant',\n                     message: 'Attention, il semblerait que votre système ai bloqué l\\'updater' +\n                     ' de No-Emu. Ajoutez une règle dans votre antivirus pour le fichier updater.exe,' +\n                     ' ou téléchargez la dernière version depuis notre site.',\n                     buttons: ['Se rendre sur le site', 'Ok'],\n                     }, (buttonIndex: number) => {\n                     if (buttonIndex == 0) {\n                     shell.openExternal(\"http://dofustouch.no-emu.com/#download\")\n                     }\n                     app.exit();\n                     });\n                     } else {\n                     if(response.noemu.web){\n                     this.openUpdateModal(response).then(() => {\n                     resolve(response);\n                     });\n                     }else{\n                     spawn('updater.exe', null, {\n                     detached: true\n                     });\n                     app.quit();\n                     }\n                     }\n                     break;*/\n                }\n            }\n        });\n    }\n\n    public checkGameUpdate(response: UpdateResponse): Promise<UpdateResponse> {\n        return new Promise((resolve, reject) => {\n\n            if (settings.getSync('buildVersion') == response.dofustouch.version) {\n                console.log('Game is already up to date');\n                resolve();\n            } else {\n                this.win = this.createWindow();\n\n                let savePath = app.getPath('userData') + '/game.zip';\n                let remoteUrl = response.dofustouch.file;\n\n                this.win.loadURL(`file://${__dirname}/../browser/index.html#/update/${encodeURIComponent(savePath)}/${encodeURIComponent(remoteUrl)}`);\n\n                if(this.application.devMode){\n                    this.win.webContents.openDevTools();\n                }\n\n                ipcMain.on('install-update', (event, arg) => {\n                    console.log('ready to update');\n\n                    extract(savePath, {dir: app.getPath('userData') + '/game'}, function (err: any) {\n                        console.log('extract finish');\n                        settings.setSync('buildVersion', response.dofustouch.version);\n                        resolve();\n                    })\n                });\n            }\n        });\n    }\n\n    public run(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.retrieveUpdate().then((response) => {\n                return this.checkNoEmuUpdate(response);\n            }).then((response) => {\n                return this.checkGameUpdate(response);\n            }).then(() => {\n                resolve();\n            });\n        });\n\n    }\n\n    private retrieveUpdate(): Promise<UpdateResponse> {\n        return new Promise((resolve, reject) => {\n\n            let queries = '?version=' + settings.getSync('option.buildVersion') + '&os=' + process.platform;\n\n            request(url.resolve(this.application.website, 'update/game.php' + queries), (error, response, body) => {\n                if (!error && response.statusCode == 200) {\n                    let parseBody: UpdateResponse = JSON.parse(body);\n                    resolve(parseBody);\n                } else {\n                    reject(error);\n                }\n            });\n        });\n    }\n\n}\n"]}